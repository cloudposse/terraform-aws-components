#!/bin/bash

# This goes before set -ex because we do not need to echo the commands
# and we do not really care if they fail, they are just informational.
backend_profile=$(jq -r '.terraform.backend.s3.profile' backend.tf.json)

if [[ -n $backend_profile ]] && [[ $backend_profile != null ]]; then
  printf "\nBackend configured to use profile %s\n" "$backend_profile"
  printf "Which maps to Role ARN %s\n\n" $(crudini --get --format=sh $AWS_CONFIG_FILE "profile $backend_profile" role_arn | cut -f2 -d=)
fi

# Add -x for troubleshooting
set -ex -o pipefail

terraform init -reconfigure

printf "\n\nSelecting Terraform workspace...\n"

# We have explicitly set up `backend.tf.json` in the same step where we set up the varfile, so to avoid surprises, do not regenerate it now
atmos terraform workspace "$ATMOS_COMPONENT" --stack="$ATMOS_STACK" --auto-generate-backend-file=false || {
  printf "%s\n" "$?"
  set +x
  printf "\n\nUnable to select workspace\n"
  echo "+ crudini --get --format=ini $AWS_CONFIG_FILE \"profile $AWS_PROFILE\""
  crudini --get --format=ini $AWS_CONFIG_FILE "profile $AWS_PROFILE"
  printf "\n\n"
  false
}

# Remove -x for security
set +x
